---
layout: post
title:  "Remote-control LiDAR Search-And-Rescue Vehicle"
date:   2022-02-20 23:35:45 -0400
categories: jekyll update
image: "/assets/images/alex1.png"
summary: "Developed with SSH, TLS, ROS Programming and Bare-Metal programming to build a search-and-rescue robot."

---
<iframe width="560" height="315" src="https://www.youtube.com/embed/fcGkgArMV6A" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

# Introduction

Designed a robot consisting of a `Raspberry Pi 4 Model B` and an `Arduino Uno`, as well as a LiDAR module. The robot is capable of autonomous mapping of the environment using a spinning laser LiDAR module, and actuates motor controls based on commands sent from a remote computer over a SSL link.

# Contributions

![Alex Architecture](/assets/images/alex2.png)

Programmed the Raspberry Pi in C to enable the following features of the robot:

1. Interfacing of `LiDAR driver` code in C++ to support selective disabling of motor spin to reduce power consumption, for instance when the vehicle stops moving. (I used File IO, not proud of that) 
1. Implemented PID control based on hall effect sensor inputs for incremental self-correction of vehicle driving trajectory.
1. Incorporated button key controls to control the robot remotely. Modified the skeleton code to create a new worker thread to handle keypresses using `ncurses`.
1. Designed the robot design so that it is compact with no loose wiring.

# Reflection
* Nothing is impossible. Try any crazy idea!
* Ubuntu makes life easier
